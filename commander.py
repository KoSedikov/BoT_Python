import vk_api
import datetime
import json
from file_manager import File
from datetime import datetime

file = File()
arr_of_user = file.read()



class Commander:

    def struct(self):
        strict = {
            '30': {
                61: {
                    'пн': {
                        'з': ['Расписание на понедельник (ЗНАМЕНАТЕЛЬ):\n___________________\n8:00 - 9:35 - Окно\n___________________\n9:45 - 13:05 - МО\n (две пары) \nПреподаватель: Коструб\nАудитория: 117Э\n___________________\n13:25 - 15:00 - Окно\n___________________\n15:10 - 16:45 - Java \nПреподаватель: Крыжановская Юлиана\n Аудитория: 11\n___________________\n15:10 - 16:45 - ПВС \nПреподаватель: Пупыкин \n Аудитория: 15\n__________________\n18:40 - 20:00 - Окно'],
                        'ч': ['Расписание на понедельник(ЧИСЛИТЕЛЬ):\n___________________\n 8:00 - 9:35 - Окно\n___________________\n9:45 - 13:05 - МО\n (две пары) \nПреподаватель: Коструб\nАудитория: 117Э\n___________________\n13:25 - 15:00 - Окно\n___________________\n15:10 - 16:45 - Java \nПреподаватель: Крыжановская Юлиана\n Аудитория: 11\n___________________\n15:10 - 16:45 - ПВС \nПреподаватель: Пупыкин \n Аудитория: 15\n__________________\n18:40 - 20:00 - Окно'],
                    },
                    'вт': {
                        'з': ['Расписание на вторник (ЗНАМЕНАТЕЛЬ):\n___________________\n7:45 - 16:45 - Военная кафедра\nили\n Если тебе повезло, то спи.'],
                        'ч': ['Расписание на вторник (ЧИСЛИТЕЛЬ):\n___________________\n7:45 - 16:45 - Военная кафедра\nили\n Если тебе повезло, то спи.'],
                    },
                    'ср': {
                        'з': ['Расписание на среду (ЗНАМЕНАТЕЛЬ):\n___________________\n8:00 - 9:35 - ВМ\nПервая подгруппа\nПреподаватель:\nШабунина Зоя Александровна\nАудитория: 407п\n___________________\n9:45 - 11:20 - ВМ\nПреподаватель:\nШабунина Зоя Александровна\nАудитория: 410п\n___________________\n11:30-13:05 - ВМ\nВторая подгруппа\nПреподаватель:\nШабунина Зоя Александровна\nАудитория: 407п\n___________________\n13:25 - 20:00 - Окно\n(4 пары)'],
                        'ч': ['Расписание на среду(ЧИСЛИТЕЛЬ):\n___________________\n8:00 - 9:35 - ВМ\nПервая подгруппа\nПреподаватель:\nШабунина Зоя Александровна\nАудитория: 407п\n___________________\n9:45 - 11:20 - ВМ\nПреподаватель:\nШабунина Зоя Александровна\nАудитория: 410п\n___________________\n11:30-13:05 - ВМ\nВторая подгруппа\nПреподаватель:\nШабунина Зоя Александровна\nАудитория: 407п\n___________________\n13:25 - 20:00 - Окно\n(4 пары)'],
                    },
                    'чт': {
                        'з': ['Расписание на четверг(ЗНАМЕНАТЕЛЬ):\n___________________\n8:00-9:35 - Java\nПреподаватель:\nБезрядин\nАудитория: 9\n___________________\n9:45 - 11:20 - Окно\n___________________\n11:30 - 13:05 - Компьютерная графика\nПреподаватель:\nТрофименко Елена Владимировна\nАудитория:226\n___________________\n13:25 - 15:00 - Основы облачных вычислений\nПреподаватель:\nТрофименко Елена Владимировна\nАудитория:10\n___________________\n15:10 - 20:00 - Окно\n(3 пары)'],
                        'ч': ['Расписание на четверг(ЧИСЛИТЕЛЬ):\n___________________\n8:00-9:35 - Java\nПреподаватель:\nБезрядин\nАудитория: 9\n___________________\n9:45 - 11:20 - Основы облачных вычислений\nПреподаватель:\nТрофименко Елена Владимировна\nАудитория:226\n___________________\n11:30 - 13:05 - Окно\n___________________\n13:25 - 15:00 - Основы облачных вычислений\nПреподаватель:\nТрофименко Елена Владимировна\nАудитория:10\n___________________\n15:10 - 20:00 - Окно\n(3 пары)'],
                    },
                    'пт': {
                        'з': ['Расписание на пятницу(ЗНАМЕНАТЕЛЬ):\n___________________\n8:00-9:35 - Численные методы\nПреподаватель:\nШабунина Зоя Александровна\nАудитория: 408П\n___________________\n9:45 - 11:20 - Окно\n___________________\n11:30 - 13:05 - Компьютерная графика\nПреподаватель:\nТрофименко Елена Владимировна\nАудитория:10\n___________________\n13:25 - 15:00 - Компьютерные сети\nПреподаватель:\nАбрамов Геннадий Сергеевич\nАудитория:433\n___________________\n15:10 - 16:45 - Окно\n16:55 - 18:30 - Физ-ра\n___________________\n18:40 - 20:00 - Окно'],
                        'ч': ['Расписание на пятницу(ЧИСЛИТЕЛЬ):\n___________________\n8:00-9:35 - Численные методы\nПреподаватель:\nШабунина Зоя Александровна\nАудитория: 408П\n___________________\n9:45 - 11:20 - Окно\n___________________\n11:30 - 13:05 - Компьютерная графика\nПреподаватель:\nТрофименко Елена Владимировна\nАудитория:10\n___________________\n13:25 - 15:00 - ПВС\nПреподаватель:\nПупыкин\nАудитория:12\n___________________\n15:10 - 20:00 - Окно (3 пары)'],
                    },
                    'сб': {
                        'з': ['Расписание на субботу(ЗНАМЕНАТЕЛЬ):\n___________________\n8:00-9:35 - Учебная практика по ВС\nПреподаватель:\nЛещинская\nАудитория: 329\n___________________\n9:45 - 11:20 - Методы оптимизации\nПреподаватель:\nКоструб\nАудитория: 10\n___________________\n11:30 - 13:05 - Окно\n___________________\n13:25 - 15:00 - Компьютерные сети\nПреподаватель:\nЩеглаков\nАудитория:124\n___________________\nДальше заслуженный отдых =)'],
                        'ч': ['Расписание на субботу(ЧИСЛИТЕЛЬ):\n___________________\n8:00-9:35 - Учебная практика по ВС\nПреподаватель:\nЛещинская\nАудитория: 329\n___________________\n9:45 - 11:20 - Учебная практика по ВС\nПреподаватель:\nЛещинская\nАудитория: 343\n___________________\n11:30 - 13:05 - Окно\n___________________\n13:25 - 15:00 - Компьютерные сети\nПреподаватель:\nЩеглаков\nАудитория:124\n___________________\nДальше заслуженный отдых =)'],
                    }
                },
                91: {},
            },
            '20': {
                61: {},
                91: {},
            },
            '10': {
                61: {},
                91: {},
            },
        }
        with open('days/days.json', 'w') as file2:
            json.dump(strict, file2)



    def now_week(self):
        timenow = datetime.now().isocalendar()
        if timenow[1] % 2 == 0:
            return ", сейчас числитель."
        else:
            return ", сейчас знаменатель."

    def json_file(self):
        with open('days/days.json', 'r') as file:
            return json.load(file)

    def input(self, msg, server, user):
        self.struct()

        """
        Функция принимающая сообщения пользователя
        :param user: Пользоватлеь который написал сообщение
        :param server: сервер
        :param msg: Сообщение
        :return: Ответ пользователю, отправившему сообщение
        """
        text = msg['text']
        sex = user['sex']

        table = self.json_file()


        if text == 'Поздороваться':
            return 'Привет-привет, ' + user['full_name'] + '!'



        elif text == 'Записаться к боту':
            if user in arr_of_user:
                return "Ты уже записан!"
            arr_of_user.append(user)
            return 'Записываем...'


        elif text == 'Узнать какая сейчас неделя':
            return user['full_name'] + str(self.now_week())

        elif text == 'бакалавр или магистр':
            return "Бакалавриат или магистратура?"

        elif text == 'Введите свой курс':
            return "Итак, твой курс? =)"

        elif text == 'Вернуться':
            return "Хмм, ты все же решил вернуться..."

        elif text == 'Бакалавриат':
            return "Какой курс бакалавриата?"

        elif text == 'Магистратура':
            return "Ого! Ты уже магистр! А какой курс?"

        elif text == '1':
            return "Ты первый курс..."

        elif text == '2':
            return "Ты уже второй курс!"

        elif text == '3':
            return "Ты уже третий курс!!!"

        elif text == '4':
            return "Выпускной четвертый курс!"
        elif text == 'Вернуться в начало':
            return 'Возвращаемся в самое начало!'

        elif text == 'Понедельник' and user.get('course') and user.get('group'): #Для понедельника
            day = table[user['course']][user['group']]
            che = self.now_week()
            if che == True:
                return day['пн']['з']
            else:
                return day['пн']['ч']

        elif text == 'Вторник' and user.get('course') and user.get('group'): # Вторник
            day = table[user['course']][user['group']]
            che = self.now_week()
            if che == True:
                return day['вт']['з']
            else:
                return day['вт']['ч']

        elif text == 'Среда' and user.get('course') and user.get('group'):
            day = table[user['course']][user['group']]
            che = self.now_week()
            if che == True:
                return day['ср']['з']
            else:
                return day['ср']['ч']

        elif text == 'Четверг' and user.get('course') and user.get('group'):
            day = table[user['course']][user['group']]
            che = self.now_week()
            if che == True:
                return day['чт']['з']
            else:
                return day['чт']['ч']

        elif text == 'Пятница' and user.get('course') and user.get('group'):
            day = table[user['course']][user['group']]
            che = self.now_week()
            if che == True:
                return day['пт']['з']
            else:
                return day['пт']['ч']

        elif text == 'Суббота' and user.get('course') and user.get('group'):
            day = table[user['course']][user['group']]
            che = self.now_week()
            if che == True:
                return day['сб']['з']
            else:
                return day['сб']['ч']
        return "Команда не распознана!"
